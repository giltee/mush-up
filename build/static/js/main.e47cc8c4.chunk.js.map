{"version":3,"sources":["logo.svg","utils/locations.js","components/map.js","components/nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LOCATION","DEASE_LAKE","LAT","LONG","TITLE","URL","FORT_NELSON","TERRACE","PRINCE_GEORGE","WHISTLER","REVELSTOKE","CRESTON","MapContainer","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","openModal","location","handleOpen","props","setState","name","handleClose","inherits","createClass","key","value","react_default","a","createElement","dist","google","zoom","initialCenter","lat","lng","onClick","title","position","onClose","onInfoWindowClose","Modal","open","disableAutoFocus","className","src","allowTransparency","frameBorder","Cancel_default","fontSize","React","Component","defaultProps","center","GoogleApiWrapper","apiKey","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","NavBar","classes","AppBar","Toolbar","variant","Typography","color","App","map","Boolean","window","hostname","match","require","config","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e47cc8c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// enum for location data\nconst LOCATION = {\n    DEASE_LAKE: {\n        LAT: 58.437082,\n        LONG: -129.991392,\n        TITLE: \"Dease Lake\",\n        URL: 'https://weather.gc.ca/wxlink/wxlink.html?cityCode=bc-14&amp;lang=e'\n    },\n    FORT_NELSON: {\n        LAT: 58.803059,\n        LONG: -122.698763,\n        TITLE: \"Fort Nelson\",\n        URL: 'https://weather.gc.ca/wxlink/wxlink.html?cityCode=bc-83&amp;lang=e'\n    },\n    TERRACE: {\n        LAT: 54.514171,\n        LONG: -128.600728,\n        TITLE: \"Terrace\",\n        URL: 'https://weather.gc.ca/wxlink/wxlink.html?cityCode=bc-80&amp;lang=e'\n    },\n    PRINCE_GEORGE: {\n        LAT: 53.912987,\n        LONG: -122.751093,\n        TITLE: \"Prince George\",\n        URL: 'https://weather.gc.ca/wxlink/wxlink.html?cityCode=bc-79&amp;lang=e'\n    },\n    WHISTLER: {\n        LAT: 50.121026,\n        LONG: -122.955807,\n        TITLE: \"Whistler\",\n        URL: 'https://weather.gc.ca/wxlink/wxlink.html?cityCode=bc-86&amp;lang=e'\n    },\n    REVELSTOKE: {\n        LAT: 51.000182,\n        LONG:  -118.199192,\n        TITLE: \"Revelstoke\",\n        URL: 'https://weather.gc.ca/wxlink/wxlink.html?cityCode=bc-65&amp;lang=e'\n    },\n    CRESTON: {\n        LAT: 49.096288,\n        LONG: -116.513273,\n        TITLE: \"Creston\",\n        URL: 'https://weather.gc.ca/wxlink/wxlink.html?cityCode=bc-26&amp;lang=e'\n    }\n}\n\nexport default LOCATION;\n","import React, { Component } from 'react';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport LOCATION from '../utils/locations'\nimport WeatherBar from './weather'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CancelIcon from '@material-ui/icons/Cancel'\n\n\n// Display the map and markers, open weather data on marker click\nexport class MapContainer extends React.Component {\n    //\n    state = {\n        openModal: false,\n        location: \"\",\n    }\n    // set the center of the map to roughly the center of British Columbia, zoom to see all locations\n    static defaultProps = {\n        center: {\n            lat: 53.746012,\n            lng: -123.227990,\n        },\n        zoom: 5\n    };\n    // get the click even and open corresponding weather feed as a modal\n    handleOpen = (props) => {\n        this.setState({ openModal: true});\n        switch (props.name) {\n            case \"Dease Lake\": this.setState({location: LOCATION.DEASE_LAKE.URL}); break;\n            case \"Creston\": this.setState({location: LOCATION.CRESTON.URL}); break;\n            case \"Terrace\": this.setState({location: LOCATION.TERRACE.URL}); break;\n            case \"Prince George\": this.setState({location: LOCATION.PRINCE_GEORGE.URL}); break;\n            case \"Revelstoke\": this.setState({location: LOCATION.REVELSTOKE.URL}); break;\n            case \"Whistler\": this.setState({location: LOCATION.WHISTLER.URL}); break;\n            case \"Fort Nelson\": this.setState({location: LOCATION.FORT_NELSON.URL}); break ;\n        }\n    }\n    handleClose = () => {\n        this.setState({ openModal: false});\n    }\n\n    // React Map component to hold place markers\n    render() {\n\n        return (\n            <div>\n            <Map google={this.props.google}\n                 zoom={5}\n                 initialCenter={{\n                     lat: 53.746012,\n                     lng: -123.227990\n                 }}\n            >\n\n                <Marker onClick={this.handleOpen}\n                        name={LOCATION.DEASE_LAKE.TITLE}\n                        title={LOCATION.DEASE_LAKE.TITLE}\n                        position={{lat: LOCATION.DEASE_LAKE.LAT, lng: LOCATION.DEASE_LAKE.LONG}}\n\n                />\n                <Marker onClick={this.handleOpen}\n                        name={LOCATION.FORT_NELSON.TITLE}\n                        title={LOCATION.FORT_NELSON.TITLE}\n                        position={{lat: LOCATION.FORT_NELSON.LAT, lng: LOCATION.FORT_NELSON.LONG}}\n                />\n                <Marker onClick={this.handleOpen}\n                        name={LOCATION.TERRACE.TITLE}\n                        title={LOCATION.TERRACE.TITLE}\n                        position={{lat: LOCATION.TERRACE.LAT, lng: LOCATION.TERRACE.LONG}}\n                />\n                <Marker onClick={this.handleOpen}\n                        name={LOCATION.PRINCE_GEORGE.TITLE}\n                        title={LOCATION.PRINCE_GEORGE.TITLE}\n                        position={{lat: LOCATION.PRINCE_GEORGE.LAT, lng: LOCATION.PRINCE_GEORGE.LONG}}\n                />\n                <Marker onClick={this.handleOpen}\n                        name={LOCATION.WHISTLER.TITLE}\n                        title={LOCATION.WHISTLER.TITLE}\n                        position={{lat: LOCATION.WHISTLER.LAT, lng: LOCATION.WHISTLER.LONG}}\n                />\n                <Marker onClick={this.handleOpen}\n                        name={LOCATION.REVELSTOKE.TITLE}\n                        title={LOCATION.REVELSTOKE.TITLE}\n                        position={{lat: LOCATION.REVELSTOKE.LAT, lng: LOCATION.REVELSTOKE.LONG}}\n                />\n                <Marker onClick={this.handleOpen}\n                        name={LOCATION.CRESTON.TITLE}\n                        title={LOCATION.CRESTON.TITLE}\n                        position={{lat: LOCATION.CRESTON.LAT, lng: LOCATION.CRESTON.LONG}}\n                />\n\n\n                <InfoWindow onClose={this.onInfoWindowClose}>\n                    <div>\n\n                    </div>\n                </InfoWindow>\n\n            </Map>\n                <Modal\n                    open={this.state.openModal}\n                    onClose={this.handleClose}\n                    disableAutoFocus={true}\n                    className=\"modal\"\n                >\n\n                    <div className=\"weatherModal\">\n\n                        <iframe title=\"Environment Canada Weather\"\n                                src={this.state.location}\n                                allowTransparency=\"true\"\n                                frameBorder=\"0\"\n                                className=\"iframe-container\"></iframe>\n                        <CancelIcon className=\"cancel\"\n                                    onClick={this.handleClose}\n                                    fontSize=\"large\"\n                        />\n                    </div>\n\n                </Modal>\n\n            </div>\n\n        );\n    }\n\n}\n\n\nexport default GoogleApiWrapper({\n    apiKey: ('AIzaSyA0h0z5UwtcKMGQTDoOe7DeY6UF_9R1jP8')\n})(MapContainer)\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n// Styles based of material UI defaults.\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n}));\n// Simple Nav bar\nexport default function NavBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar variant=\"dense\">\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        MushUp\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {NavBar, MapContainer} from './components/';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <NavBar/>\n        <MapContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config();\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}